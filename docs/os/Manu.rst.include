5. How can I create a new folder? (mkdir)
=============================
To create a new folder you can use ``mkdir`` on your Terminal. In this exercise you will create a new folder called ``NewPythonFolder``

1-Type and enter in your Terminal:
   .. code-block:: 

      mkdir NewPythonFolder

2-Type and enter in your Terminal:
   .. code-block:: 

      ls

This should look *something* like this in your **Terminal**:


.. tab::  Windows (Powershell) 

   
   .. termynal:: termynal:mkdirPS
        :title: Powershell
        :windows:

        -   value: mkdir NewPythonFolder
            type: input
            prompt: 'PS C:\User\youruser>'
        -   value: ls
            type: input
            prompt: 'PS C:\User\youruser>'
        -   'PS C:\User\youruser>'  



.. tab:: Windows (Command prompt)

   
   .. termynal:: termynal:mkdirCMD
        :title: Command prompt
        :windows:

        -   value: mkdir NewPythonFolder
            type: input
            prompt: 'C:\User\youruser>'
        -   value: ls
            type: input
            prompt: 'C:\User\youruser>'   
        -   'C:\User\youruser>'



.. tab:: Mac Terminal

   
   .. termynal:: termynal:mkdirMAC
        :title: Command prompt
        :unix:

        -   value: mkdir NewPythonFolder 
            type: input
            prompt: 'username@mac ~ %'
        -   value: ls
            type: input
            prompt: 'username@mac ~ %' 
        -   'username@mac ~ %'


   .. $ pwd  # On Unix-based systems (Linux or macOS)

.. tab:: Linux Terminal

   
   .. termynal:: termynal:mkdirLINUX
        :title: Command prompt
        :unix:

        -   value: mkdir NewPythonFolder
            type: input
            prompt: 'username@linux~$'
        -   value: ls
            type: input
            prompt: 'username@linux~$'     
        -   'username@linux~$'



After these two simple steps you should get a list as you did before when you learned how to use ``ls``. 
In this list you should be able to see the 'NewPythonFolder' you have just created.

6. How can I delete a folder or a file using a Terminal? (rm and rm -r)
=============================
To eliminate a folder you can use ``rm`` to eliminate a file or ``rm -r`` to eliminate a folder using the Terminal. 
In this exercise you will eliminate the folder you created in the previous exercise. 

1-Type and enter in your Terminal:
   .. code-block:: 

      rm -r NewPythonFolder

2-Type and enter in your Terminal:
   .. code-block:: 

      ls

This should look like this in your **Terminal**:


.. tab::  Windows (Powershell) 

   
   .. termynal:: termynal:rmPS
        :title: Powershell
        :windows:

        -   value: rm -r NewPythonFolder
            type: input
            prompt: 'PS C:\User\youruser>'
        -   value: ls
            type: input
            prompt: 'PS C:\User\youruser>'
        -   'PS C:\User\youruser>'  



.. tab:: Windows (Command prompt)

   
   .. termynal:: termynal:rmCMD
        :title: Command prompt
        :windows:

        -   value: rm -r NewPythonFolder
            type: input
            prompt: 'C:\User\youruser>'
        -   value: ls
            type: input
            prompt: 'C:\User\youruser>'   
        -   'C:\User\youruser>'



.. tab:: Mac Terminal

   
   .. termynal:: termynal:rmMAC
        :title: Command prompt
        :unix:

        -   value: rm -r NewPythonFolder 
            type: input
            prompt: 'username@mac ~ %'
        -   value: ls
            type: input
            prompt: 'username@mac ~ %' 
        -   'username@mac ~ %'


   .. $ pwd  # On Unix-based systems (Linux or macOS)

.. tab:: Linux Terminal

   
   .. termynal:: termynal:rmLINUX
        :title: Command prompt
        :unix:

        -   value: rm -r NewPythonFolder
            type: input
            prompt: 'username@linux~$'
        -   value: ls
            type: input
            prompt: 'username@linux~$'     
        -   'username@linux~$'



After these two simple steps you should get a list as you did before when you learned how to use ``ls``. 
In this list you should not be able to see the 'NewPythonFolder' you have just deleted.

7. Which Python version? (python --version or python3 --version)
==================================

Check which Python version you have.  **Note that this might change depending on what system you 
have and wether you have more than one Python version installed**

You will have to run either:
   .. code-block:: 

      python --version

or

   .. code-block:: 

      python3 --version

This should look like this in your **Terminal**:


.. tab::  Windows (Powershell) 

   
   .. termynal:: termynal:pythonversionPS
        :title: Powershell
        :windows:

        -   value: python --version
            type: input
            prompt: 'PS C:\User\youruser>'
        -   'Python 3.11.4'  



.. tab:: Windows (Command prompt)

   
   .. termynal:: termynal:pythonversionCMD
        :title: Command prompt
        :windows:

        -   value: python --version
            type: input
            prompt: 'C:\User\youruser>'
        -   'Python 3.11.4'  


.. tab:: Mac Terminal

   .. termynal:: termynal:pythonversionMAC
        :title: Command prompt
        :unix:

        -   value: python --version 
            type: input
            prompt: 'username@mac ~ %'
        -   'Python 3.11.4'  


   .. $ pwd  # On Unix-based systems (Linux or macOS)

.. tab:: Linux Terminal

   
   .. termynal:: termynal:pythonversionLINUX
        :title: Command prompt
        :unix:

        -   value: python --version
            type: input
            prompt: 'username@linux~$'
        -   'Python 3.11.4'  




8. Python Interactive Shell and Normal Terminal Shell (python/python3)
==================================

Enter the Python interactive shell. **Note:After doing the last exercise you should know
which is the command that you should use**.



You will have to run either:
   .. code-block:: 

      python

or

   .. code-block:: 

      python3

Next, you will see a different prompt indicating that you are now in the Python shell. 

This should look *something* like this in your **Terminal**:


.. tab::  Windows (Powershell) 

   
   .. termynal:: termynal:pythonINPS
        :title: Powershell
        :windows:

        -   value: python
            type: input
            prompt: 'PS C:\User\youruser>'
        -   'Python 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ] on darwin Type "help", "copyright", "credits" or "license" for more information.'  




.. tab:: Windows (Command prompt)

   
   .. termynal:: termynal:pythonINCMD
        :title: Command prompt
        :windows:

        -   value: python
            type: input
            prompt: 'C:\User\youruser>'
        -   'Python 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ] on darwin
        Type "help", "copyright", "credits" or "license" for more information.'  


.. tab:: Mac Terminal

   .. termynal:: termynal:pythonINMAC
        :title: Command prompt
        :unix:

        -   value: python3
            type: input
            prompt: 'username@mac ~ %'
        -   'Python 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ] on darwin
        Type "help", "copyright", "credits" or "license" for more information.'    


   .. $ pwd  # On Unix-based systems (Linux or macOS)

.. tab:: Linux Terminal

   
   .. termynal:: termynal:pythonINLINUX
        :title: Command prompt
        :unix:

        -   value: python3
            type: input
            prompt: 'username@linux~$'
        -   'Python 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ] on darwin
        Type "help", "copyright", "credits" or "license" for more information.'   





